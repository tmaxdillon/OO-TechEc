turbineLibrary

cost = zeros(1,length(turbine));
kW = zeros(1,length(turbine));

%unpack into arrays
for i = 1:length(turbine)
    cost(i) = turbine(i).cost/1000;
    kW(i) = turbine(i).kW;
end

n = 2;

V(:,n+1) = ones(length(kW),1,class(kW));
for j = n:-1:1
    V(:,j) = kW.*V(:,j+1);
end
C = V;
d = cost;
A = 1;
b = 0;
p = lsqlin( C, d, A, b)
% We can then use POLYVAL to evaluate the fitted curve
yhat = polyval( p, x );
% Plot original data
plot(x,y,'.b-') 
hold on
% Plot point to go through
plot(x0,y0,'gx','linewidth',4) 
% Plot fitted data
plot(x,yhat,'r','linewidth',2) 


[p,S] = polyfit(kW(~isnan(cost)),cost(~isnan(cost)),1);
x = min(kW):0.01:max(kW);
[y,delta] = polyval(p,x,S);

figure
boundedline(x,y,delta,'alpha','transparency',.1)
hold on
scatter(kW,cost,100,'.','k')
ylabel('Cost in Thousands [$]')
xlabel('Rated Power [kW]')
set(gca,'FontSize',14,'LineWidth',1.4)
set(gca,'xticklabel',num2str(get(gca,'xtick')','%.1f'))
set(gca,'yticklabel',num2str(get(gca,'ytick')','%d'))
grid on